{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import {\n  AnyDocument,\n  AnyOrama,\n  Language,\n  RawData,\n  Result,\n  Results,\n  SearchParams,\n  TypedDocument,\n  load,\n  save,\n  search\n} from '@orama/orama'\nimport { boundedLevenshtein } from '@orama/orama/internals'\n\nexport interface Position {\n  start: number\n  length: number\n}\n\nexport type OramaWithHighlight<T extends AnyOrama> = T & {\n  data: { positions: Record<string, Record<string, Record<string, Position[]>>> }\n}\n\nexport type ResultWithPositions<ResultDocument> = Result<ResultDocument> & {\n  positions: Record<string, Record<string, Position[]>>\n}\n\nexport type SearchResultWithHighlight<ResultDocument> = Omit<Results<ResultDocument>, 'hits'> & {\n  hits: ResultWithPositions<ResultDocument>[]\n}\n\nexport type RawDataWithPositions = RawData & {\n  positions: Record<string, Record<string, Record<string, Position[]>>>\n}\n\nexport async function afterInsert<T extends AnyOrama>(orama: T, id: string): Promise<void> {\n  if (!('positions' in orama.data)) {\n    Object.assign(orama.data, { positions: {} })\n  }\n\n  await recursivePositionInsertion(\n    orama as OramaWithHighlight<T>,\n    (await orama.documentsStore.get(orama.data.docs, id))!,\n    id\n  )\n}\n\nconst wordRegEx = /[\\p{L}0-9_'-]+/gimu\n\nasync function recursivePositionInsertion<T extends AnyOrama, ResultDocument = TypedDocument<T>>(\n  orama: OramaWithHighlight<T>,\n  doc: ResultDocument,\n  id: string,\n  prefix = '',\n  schema: T['schema'] = orama.schema\n): Promise<void> {\n  orama.data.positions[id] = Object.create(null)\n  for (const key of Object.keys(doc as object) as Array<keyof ResultDocument>) {\n    const isNested = typeof doc[key] === 'object'\n    const isSchemaNested = typeof schema[key] === 'object'\n    const propName = `${prefix}${String(key)}`\n    if (isNested && key in schema && isSchemaNested) {\n      recursivePositionInsertion(orama, doc[key], id, propName + '.', schema[key])\n    }\n    if (!(typeof doc[key] === 'string' && key in schema && !isSchemaNested)) {\n      continue\n    }\n    orama.data.positions[id][propName] = Object.create(null)\n    const text = doc[key] as string\n    let regExResult\n    while ((regExResult = wordRegEx.exec(text)) !== null) {\n      const word = regExResult[0].toLowerCase()\n      const key = `${orama.tokenizer.language}:${word}`\n      let token: string\n      if (orama.tokenizer.normalizationCache.has(key)) {\n        token = orama.tokenizer.normalizationCache.get(key)!\n        /* c8 ignore next 4 */\n      } else {\n        ;[token] = await orama.tokenizer.tokenize(word)\n        orama.tokenizer.normalizationCache.set(key, token)\n      }\n      if (!Array.isArray(orama.data.positions[id][propName][token])) {\n        orama.data.positions[id][propName][token] = []\n      }\n      const start = regExResult.index\n      const length = regExResult[0].length\n      orama.data.positions[id][propName][token].push({ start, length })\n    }\n  }\n}\n\nexport async function searchWithHighlight<T extends AnyOrama, ResultDocument = TypedDocument<T>>(\n  orama: T,\n  params: SearchParams<T, ResultDocument>,\n  language?: Language\n): Promise<SearchResultWithHighlight<ResultDocument>> {\n  const result = await search(orama, params, language)\n  const queryTokens: string[] = await orama.tokenizer.tokenize(params.term ?? '', language)\n\n  let hitsWithPosition = []\n  for (const hit of result.hits) {\n    const hitPositions = Object.entries<any>((orama as OramaWithHighlight<T>).data.positions[hit.id])\n\n    let hits: AnyDocument[] = []\n    for (const [propName, tokens] of hitPositions) {\n      const matchWithSearchTokens = []\n\n      const tokenEntries = Object.entries(tokens)\n      for (const tokenEntry of tokenEntries) {\n        const [token] = tokenEntry\n\n        for (const queryToken of queryTokens) {\n          if (params.tolerance) {\n            const distance = await boundedLevenshtein(token, queryToken, params.tolerance)\n            if (distance.isBounded) {\n              matchWithSearchTokens.push(tokenEntry)\n              break\n            }\n          } else if (token.startsWith(queryToken)) {\n            matchWithSearchTokens.push(tokenEntry)\n            break\n          }\n        }\n      }\n      hits.push([propName, Object.fromEntries(matchWithSearchTokens)])\n    }\n\n    hitsWithPosition.push(Object.assign(hit, { positions: Object.fromEntries(hits) }))\n  }\n\n  result.hits = hitsWithPosition\n\n  // @ts-ignore\n  return result\n}\n\nexport async function saveWithHighlight<T extends AnyOrama>(orama: T): Promise<RawDataWithPositions> {\n  const data = await save(orama)\n\n  return {\n    ...data,\n    positions: (orama as OramaWithHighlight<T>).data.positions\n  }\n}\n\nexport async function loadWithHighlight<T extends AnyOrama>(orama: T, raw: RawDataWithPositions): Promise<void> {\n  await load(orama, raw)\n  ;(orama as OramaWithHighlight<T>).data.positions = raw.positions\n}\n"],"names":["load","save","search","boundedLevenshtein","afterInsert","orama","id","data","Object","assign","positions","recursivePositionInsertion","documentsStore","get","docs","wordRegEx","doc","prefix","schema","create","key","keys","isNested","isSchemaNested","propName","String","text","regExResult","exec","word","toLowerCase","tokenizer","language","token","normalizationCache","has","tokenize","set","Array","isArray","start","index","length","push","searchWithHighlight","params","result","queryTokens","term","hitsWithPosition","hit","hits","hitPositions","entries","tokens","matchWithSearchTokens","tokenEntries","tokenEntry","queryToken","tolerance","distance","isBounded","startsWith","fromEntries","saveWithHighlight","loadWithHighlight","raw"],"mappings":"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"}