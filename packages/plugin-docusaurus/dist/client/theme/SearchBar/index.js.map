{"version":3,"sources":["../../../../src/client/theme/SearchBar/index.tsx"],"sourcesContent":["import { autocomplete } from '@algolia/autocomplete-js'\nimport '@algolia/autocomplete-theme-classic/dist/theme.min.css'\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment, @typescript-eslint/prefer-ts-expect-error\n// @ts-ignore Will fail in CJS compilation\nimport { GlobalVersion, useActiveVersion, useVersions } from '@docusaurus/plugin-content-docs/client'\nimport { useColorMode, useDocsPreferredVersion } from '@docusaurus/theme-common'\nimport useBaseUrl from '@docusaurus/useBaseUrl'\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext'\nimport { usePluginData } from '@docusaurus/useGlobalData'\nimport useIsBrowser from '@docusaurus/useIsBrowser'\nimport { create, load, AnyDocument } from '@orama/orama'\nimport type { OramaWithHighlight, Position } from '@orama/plugin-match-highlight'\nimport { searchWithHighlight } from '@orama/plugin-match-highlight'\nimport { ungzip } from 'pako'\nimport { Fragment, createElement, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { render } from 'react-dom'\n// @ts-expect-error Resolve at runtime\nimport { SearchNoResults } from '@theme/SearchNoResults'\n// @ts-expect-error Resolve at runtime\nimport { SearchResults } from '@theme/SearchResults'\n// @ts-expect-error Resolve at runtime\nimport { SearchResult } from '@theme/SearchResult'\nimport { Hit, INDEX_FILE, PLUGIN_NAME, PluginData, RawDataWithPositions, schema } from '../../../server/types.js'\n\nexport default function SearchBar(): JSX.Element {\n  const isBrowser = useIsBrowser()\n  const { siteConfig } = useDocusaurusContext()\n  const containerRef = useRef<HTMLDivElement>(null)\n  const { colorMode } = useColorMode()\n  const { searchData } = usePluginData(PLUGIN_NAME) as PluginData\n  const [database, setDatabase] = useState<OramaWithHighlight<AnyDocument>>()\n  const searchBaseUrl = useBaseUrl(INDEX_FILE)\n  const versions = useVersions(undefined)\n  const activeVersion = useActiveVersion(undefined)\n  const { preferredVersion } = useDocsPreferredVersion()\n\n  const version = useMemo(() => {\n    if (!isBrowser) {\n      return undefined\n    } else if (activeVersion) {\n      return activeVersion\n    } else if (preferredVersion) {\n      return preferredVersion\n    }\n\n    // Fallback - Return the latest version or the first one existing\n    return versions.find((v: GlobalVersion) => v.isLast) ?? versions[0]\n  }, [isBrowser, activeVersion, preferredVersion, versions])\n\n  const onKeyDown = useCallback(\n    function (setIsOpen: (value: boolean) => void, event: KeyboardEvent) {\n      const isOpen = containerRef.current?.querySelector('[role=\"combobox\"]')?.getAttribute('aria-expanded') === 'true'\n\n      if (\n        (event.key?.toLowerCase() === 'escape' && isOpen) ||\n        (event.key?.toLowerCase() === 'k' && (event.metaKey || event.ctrlKey))\n      ) {\n        event.preventDefault()\n        setIsOpen(!isOpen)\n      }\n    },\n    [containerRef]\n  )\n\n  useEffect(() => {\n    if (!containerRef.current || !isBrowser || !database) {\n      return undefined\n    }\n\n    const search = autocomplete({\n      placeholder: 'Search ...',\n      container: containerRef.current,\n      // @ts-expect-error render typing here is for preact, react also works\n      renderer: { createElement, Fragment, render },\n      openOnFocus: true,\n      detachedMediaQuery: '', // always detached\n      async getSources({ query: term }): Promise<any> {\n        return [\n          {\n            sourceId: 'orama',\n            async getItems() {\n              const results = await searchWithHighlight(database, {\n                term,\n                properties: ['sectionTitle', 'sectionContent', 'type']\n              })\n\n              const processed = results.hits.flatMap(hit =>\n                Object.values((hit as any).positions.sectionContent).flatMap(positions =>\n                  (positions as any).map((position: Position) => ({\n                    ...hit,\n                    position\n                  }))\n                )\n              )\n\n              return processed\n            },\n            getItemUrl({ item }: { item: Hit }) {\n              return item.document.pageRoute\n            },\n            templates: {\n              item({ item }: { item: Hit }) {\n                return <SearchResult hit={item} />\n              }\n            }\n          }\n        ]\n      },\n      render({ sections, render }, root) {\n        render(<SearchResults sections={sections} />, root)\n      },\n      renderNoResults({ render, state }, root) {\n        render(<SearchNoResults query={state.query} />, root)\n      }\n    })\n\n    const handler = onKeyDown.bind(null, search.setIsOpen)\n    window.addEventListener('keydown', handler)\n\n    // Move keyboard instructions at the end - Apparently this is only possible manually\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const button = containerRef.current.querySelector('.aa-DetachedSearchButton')!\n    const icons = containerRef.current.querySelectorAll('kbd')\n\n    for (const icon of Array.from(icons)) {\n      button.appendChild(icon.cloneNode(true))\n    }\n\n    return () => {\n      window.removeEventListener('keydown', handler)\n      search.destroy()\n    }\n  }, [isBrowser, siteConfig, database, colorMode, onKeyDown])\n\n  useEffect(() => {\n    async function loadDatabase(version: GlobalVersion): Promise<void> {\n      let buffer: ArrayBuffer\n\n      if (searchData[version.name]) {\n        buffer = searchData[version.name].data\n      } else {\n        const searchResponse = await fetch(searchBaseUrl.replace('@VERSION@', version.name))\n\n        if (searchResponse.status === 0) {\n          throw new Error(`Network error: ${await searchResponse.text()}`)\n        } else if (searchResponse.status !== 200) {\n          throw new Error(`HTTP error ${searchResponse.status}: ${await searchResponse.text()}`)\n        }\n\n        buffer = await searchResponse.arrayBuffer()\n      }\n\n      const deflated = ungzip(buffer, { to: 'string' })\n      const data: RawDataWithPositions = JSON.parse(deflated)\n\n      const _db = await create({ schema })\n      const db = _db as OramaWithHighlight<typeof _db>;\n      await load(db, data)\n      db.data.positions = data.positions\n      setDatabase(db)\n    }\n\n    if (!isBrowser || !version) {\n      return\n    }\n\n    loadDatabase(version).catch(error => {\n      console.error('Cannot load search index.', error)\n    })\n  }, [isBrowser, searchData, searchBaseUrl, version])\n\n  useEffect(() => {\n    colorMode === 'dark' ? document.body.classList.add(colorMode) : document.body.classList.remove('dark')\n  }, [colorMode])\n\n  return (\n    <div ref={containerRef}>\n      {/* We need to use a template here since apparently there is no easy way to customize the input box */}\n      <template>\n        <kbd>âŒ˜</kbd>\n        <kbd>K</kbd>\n      </template>\n    </div>\n  )\n}\n"],"names":["autocomplete","useActiveVersion","useVersions","useColorMode","useDocsPreferredVersion","useBaseUrl","useDocusaurusContext","usePluginData","useIsBrowser","create","load","searchWithHighlight","ungzip","Fragment","createElement","useCallback","useEffect","useMemo","useRef","useState","render","SearchNoResults","SearchResults","SearchResult","INDEX_FILE","PLUGIN_NAME","schema","SearchBar","isBrowser","siteConfig","containerRef","colorMode","searchData","database","setDatabase","searchBaseUrl","versions","undefined","activeVersion","preferredVersion","version","find","v","isLast","onKeyDown","setIsOpen","event","isOpen","current","querySelector","getAttribute","key","toLowerCase","metaKey","ctrlKey","preventDefault","search","placeholder","container","renderer","openOnFocus","detachedMediaQuery","getSources","query","term","sourceId","getItems","results","properties","processed","hits","flatMap","hit","Object","values","positions","sectionContent","map","position","getItemUrl","item","document","pageRoute","templates","sections","root","renderNoResults","state","handler","bind","window","addEventListener","button","icons","querySelectorAll","icon","Array","from","appendChild","cloneNode","removeEventListener","destroy","loadDatabase","buffer","name","data","searchResponse","fetch","replace","status","Error","text","arrayBuffer","deflated","to","JSON","parse","_db","db","catch","error","console","body","classList","add","remove","div","ref","template","kbd"],"mappings":"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"}