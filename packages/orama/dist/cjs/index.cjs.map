{"version":3,"sources":["../../src/cjs/index.cts"],"sourcesContent":["// import type { create as esmCreate } from '../methods/create.js'\n// import type { count as esmCount, getByID as esmGetByID } from '../methods/docs.js'\n// import type { insert as esmInsert, insertMultiple as esminsertMultiple } from '../methods/insert.js'\n// import type { remove as esmRemove, removeMultiple as esmRemoveMultiple } from '../methods/remove.js'\n// import type { search as esmSearch } from '../methods/search.js'\n// import type { searchVector as esmSearchVector } from '../methods/search-vector.js'\n// import type { load as esmLoad, save as esmSave } from '../methods/serialization.js'\n// import type { update as esmUpdate, updateMultiple as esmUpdateMultiple } from '../methods/update.js'\n\n// let _esmCount: typeof esmCount\n// let _esmCreate: typeof esmCreate\n// let _esmGetByID: typeof esmGetByID\n// let _esmInsert: typeof esmInsert\n// let _esmInsertMultiple: typeof esminsertMultiple\n// let _esmLoad: typeof esmLoad\n// let _esmRemove: typeof esmRemove\n// let _esmRemoveMultiple: typeof esmRemoveMultiple\n// let _esmSave: typeof esmSave\n// let _esmSearch: typeof esmSearch\n// let _esmUpdate: typeof esmUpdate\n// let _esmUpdateMultiple: typeof esmUpdateMultiple\n// let _esmSearchVector: typeof esmSearchVector\n\nimport  { create as esmCreate } from '../methods/create.js'\nimport  { count as esmCount, getByID as esmGetByID } from '../methods/docs.js'\nimport  { insert as esmInsert, insertMultiple as esminsertMultiple } from '../methods/insert.js'\nimport  { remove as esmRemove, removeMultiple as esmRemoveMultiple } from '../methods/remove.js'\nimport  { search as esmSearch } from '../methods/search.js'\nimport  { searchVector as esmSearchVector } from '../methods/search-vector.js'\nimport  { load as esmLoad, save as esmSave } from '../methods/serialization.js'\nimport  { update as esmUpdate, updateMultiple as esmUpdateMultiple } from '../methods/update.js'\n\nlet _esmCount = esmCount\nlet _esmCreate = esmCreate\nlet _esmGetByID = esmGetByID\nlet _esmInsert = esmInsert\nlet _esmInsertMultiple = esminsertMultiple\nlet _esmLoad = esmLoad\nlet _esmRemove = esmRemove\nlet _esmRemoveMultiple = esmRemoveMultiple\nlet _esmSave = esmSave\nlet _esmSearch = esmSearch\nlet _esmUpdate = esmUpdate\nlet _esmUpdateMultiple = esmUpdateMultiple\nlet _esmSearchVector = esmSearchVector\n\nexport async function count(...args: Parameters<typeof esmCount>): ReturnType<typeof esmCount> {\n  if (!_esmCount) {\n    const imported = await import('../methods/docs.js')\n    _esmCount = imported.count\n  }\n\n  return _esmCount(...args)\n}\n\nexport async function create(...args: Parameters<typeof esmCreate>): ReturnType<typeof esmCreate> {\n  if (!_esmCreate) {\n    const imported = await import('../methods/create.js')\n    _esmCreate = imported.create\n  }\n\n  return _esmCreate(...args)\n}\n\nexport async function getByID(...args: Parameters<typeof esmGetByID>): ReturnType<typeof esmGetByID> {\n  if (!_esmGetByID) {\n    const imported = await import('../methods/docs.js')\n    _esmGetByID = imported.getByID\n  }\n\n  return _esmGetByID(...args)\n}\n\nexport async function insert(...args: Parameters<typeof esmInsert>): ReturnType<typeof esmInsert> {\n  if (!_esmInsert) {\n    const imported = await import('../methods/insert.js')\n    _esmInsert = imported.insert\n  }\n\n  return _esmInsert(...args)\n}\n\nexport async function insertMultiple(\n  ...args: Parameters<typeof esminsertMultiple>\n): ReturnType<typeof esminsertMultiple> {\n  if (!_esmInsertMultiple) {\n    const imported = await import('../methods/insert.js')\n    _esmInsertMultiple = imported.insertMultiple\n  }\n\n  return _esmInsertMultiple(...args)\n}\n\nexport async function load(...args: Parameters<typeof esmLoad>): ReturnType<typeof esmLoad> {\n  if (!_esmLoad) {\n    const imported = await import('../methods/serialization.js')\n    _esmLoad = imported.load\n  }\n\n  return _esmLoad(...args)\n}\n\nexport async function remove(...args: Parameters<typeof esmRemove>): ReturnType<typeof esmRemove> {\n  if (!_esmRemove) {\n    const imported = await import('../methods/remove.js')\n    _esmRemove = imported.remove\n  }\n\n  return _esmRemove(...args)\n}\n\nexport async function removeMultiple(\n  ...args: Parameters<typeof esmRemoveMultiple>\n): ReturnType<typeof esmRemoveMultiple> {\n  if (!_esmRemoveMultiple) {\n    const imported = await import('../methods/remove.js')\n    _esmRemoveMultiple = imported.removeMultiple\n  }\n\n  return _esmRemoveMultiple(...args)\n}\n\nexport async function save(...args: Parameters<typeof esmSave>): ReturnType<typeof esmSave> {\n  if (!_esmSave) {\n    const imported = await import('../methods/serialization.js')\n    _esmSave = imported.save\n  }\n\n  return _esmSave(...args)\n}\n\nexport async function search(...args: Parameters<typeof esmSearch>): ReturnType<typeof esmSearch> {\n  if (!_esmSearch) {\n    const imported = await import('../methods/search.js')\n    _esmSearch = imported.search\n  }\n\n  return _esmSearch(...args)\n}\n\nexport async function update(...args: Parameters<typeof esmUpdate>): ReturnType<typeof esmUpdate> {\n  if (!_esmUpdate) {\n    const imported = await import('../methods/update.js')\n    _esmUpdate = imported.update\n  }\n\n  return _esmUpdate(...args)\n}\n\nexport async function updateMultiple(\n  ...args: Parameters<typeof esmUpdateMultiple>\n): ReturnType<typeof esmUpdateMultiple> {\n  if (!_esmUpdateMultiple) {\n    const imported = await import('../methods/update.js')\n    _esmUpdateMultiple = imported.updateMultiple\n  }\n\n  return _esmUpdateMultiple(...args)\n}\n\nexport async function searchVector(\n  ...args: Parameters<typeof esmSearchVector>\n): ReturnType<typeof esmSearchVector> {\n  if (!_esmSearchVector) {\n    const imported = await import('../methods/search-vector.js')\n    _esmSearchVector = imported.searchVector\n  }\n\n  return _esmSearchVector(...args)\n}\n\nexport * as components from './components/defaults.cjs'\nexport * as internals from './internals.cjs'\n"],"names":["count","create","getByID","insert","insertMultiple","load","remove","removeMultiple","save","search","update","updateMultiple","searchVector","components","internals","_esmCount","esmCount","_esmCreate","esmCreate","_esmGetByID","esmGetByID","_esmInsert","esmInsert","_esmInsertMultiple","esminsertMultiple","_esmLoad","esmLoad","_esmRemove","esmRemove","_esmRemoveMultiple","esmRemoveMultiple","_esmSave","esmSave","_esmSearch","esmSearch","_esmUpdate","esmUpdate","_esmUpdateMultiple","esmUpdateMultiple","_esmSearchVector","esmSearchVector","args","imported"],"mappings":"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"}